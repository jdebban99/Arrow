import pygame
import time
import random

pygame.init()

white = (255,255,255)
black = (0,0,0)

red = (200,0,0)
light_red = (255,0,0)

yellow = (200,200,0)
light_yellow = (255,255,0)

purple = (200,0,200)

light_green = (0,255,0)
green = (0,155,0)

display_width = 800
display_height = 600

gameDisplay = pygame.display.set_mode((display_width,display_height))
pygame.display.set_caption('Arrow')

icon = pygame.image.load('icon.png')
pygame.display.set_icon(icon)

left = pygame.image.load('arrow_left.png')
down = pygame.image.load('arrow_down.png')
up = pygame.image.load('arrow_up.png')
right = pygame.image.load('arrow_right.png')

clock = pygame.time.Clock()

AppleThickness = 30
block_size = 20

FPS = 10

direction = "right"

smallfont = pygame.font.SysFont("comicsansms", 25)
medfont = pygame.font.SysFont("comicsansms", 40)
largefont = pygame.font.SysFont("comicsansms", 70)

def text_objects(text, color, size):
    if size == "small":
        textSurface = smallfont.render(text, True, color)
    elif size == "medium":
        textSurface = medfont.render(text, True, color)
    elif size == "large":
        textSurface = largefont.render(text, True, color)

    return textSurface, textSurface.get_rect()

def text_to_button(msg, color, buttonx, buttony, buttonwidth, buttonheight, size = "small"):
    textSurf, textRect = text_objects(msg,color,size)
    textRect.center = ((buttonx+(buttonwidth/2)), buttony+(buttonheight/2))
    gameDisplay.blit(textSurf, textRect)
        
    
def message_to_screen(msg, color, y_displace=0, size = "small"):
    textSurf, textRect = text_objects(msg,color,size)
    textRect.center = (display_width/2), (display_height/2)+y_displace
    gameDisplay.blit(textSurf, textRect)

def button(text,x,y,width,height, inactive_color, active_color, action = None):
    cur = pygame.mouse.get_pos()
    click = pygame.mouse.get_pressed()
    
    if x + width > cur[0] > x and y + height > cur[1] > y:
        pygame.draw.rect(gameDisplay, active_color, (x,y,width,height))
        if click[0] == 1 and action != None:
            if action == "quit":
                pygame.quit()
                quit()
            if action == "controls":
                game_controls()
            if action == "play":
                gameLoop()
            if action == "menu":
                game_intro()
    else:
        pygame.draw.rect(gameDisplay, inactive_color, (x,y,width,height))
              
    text_to_button(text,black,x,y,width,height)
    
def pause():
    paused = True
    message_to_screen("Paused",
                      black,
                      -100,
                      "large")
    message_to_screen("Press C to continue or Q to quit.",
                      black,
                      25)

    pygame.display.update()

    while paused:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()

            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_c:
                    paused = False

                elif event.key == pygame.K_q:
                    pygame.quit()
                    quit()

        clock.tick(5)

def game_controls():
    
    gcont = True

    while gcont:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()

        gameDisplay.fill(white)

        message_to_screen("Controls",
                          green,
                          -100,
                          "large")
        message_to_screen("Left: Left Arrow Key",
                          black,
                          -30)
        message_to_screen("Up: Up Arrow Key",
                          black,
                          10)
        message_to_screen("Down: Down Arrow Key",
                          black,
                          50)
        message_to_screen("Right: Right Arrow Key",
                          black,
                          90)

        button("Play", 150,500,100,50, green, light_green, action = "play")
        button("Menu", 350,500,100,50, yellow, light_yellow, action = "menu")
        button("Quit", 550,500,100,50, red, light_red, action = "quit")

        pygame.display.update()
        clock.tick(15)


    

##def score(score):
##    text = smallfont.render("score: "+str(score), True, black)
##    gameDisplay.blit(text, [0,0])
##
##    return randAppleX, randAppleY
##def my_print(randArrow, depth):
##    print(str(obj)[:depth])
def randArrow():
    randArrow = ['left', 'right', 'down', 'up']

    for direction in 'randArrow':
        print(random.choice(randArrow))

    

    return randArrow

def 

def game_intro():

    intro = True

    while intro:

        for event in pygame.event.get():
            #print(event)
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()

            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_c:
                    intro = False
                if event.key == pygame.K_q:
                    pygame.quit()
                    quit()
        
        gameDisplay.fill(white)
        
        message_to_screen("Welcome to Arrows",
                          green,
                          -100,
                          "large")
        message_to_screen("Push the key with the corresponding key shown on screen",
                          black,
                          -30)
##        message_to_screen("...",
##                          black,
##                          10)
##        message_to_screen("The more ... harder it gets and the higher the score.",
##                          black,
##                          50)
        #message_to_screen("Press C to play, P to pause or Q to quit",
                          #black,
                          #180)



        button("Play", 150,500,100,50, green, light_green, action = "play")
        button("Controls", 350,500,100,50, yellow, light_yellow, action = "controls")
        button("Quit", 550,500,100,50, red, light_red, action = "quit")

        pygame.display.update()
        clock.tick(15)

def text_objects(text, color, size):

    if size == "small":
        textSurface = smallfont.render(text, True, color)

    elif size == "medium":
        textSurface = medfont.render(text, True, color)

    elif size == "large":
        textSurface = largefont.render(text, True, color)
        
    return textSurface, textSurface.get_rect()

def message_to_screen(msg,color, y_displace=0, size = "small"):
    textSurf, textRect = text_objects(msg,color, size)
    textRect.center = (display_width/2), (display_height/2)+y_displace
    gameDisplay.blit(textSurf, textRect)
    
def gameLoop():
    
    gameExit = False
    gameOver = False


    while not gameExit:

        while gameOver == True:
            gameDisplay.fill(white)
            message_to_screen("Game Over", purple, y_displace=-50, size="large")
            message_to_screen("Press C to play again or Q to quit", green, y_displace=50,size="medium")
            pygame.display.update()

            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    gameExit = True
                    gameOver = False
                if event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_q:
                        gameExit = True
                        gameOver = False
                    if event.key == pygame.K_c:
                        gameLoop()

        pygame.display.update()
        clock.tick(FPS)
        
    pygame.quit()
    quit()
    
randArrow()
game_intro()
gameLoop()
